{"version":3,"file":"ej2-angular-notifications.umd.js","sources":["~/@syncfusion/ej2-angular-notifications/src/toast/buttons.directive.ts","~/@syncfusion/ej2-angular-notifications/src/toast/toast.component.ts","~/@syncfusion/ej2-angular-notifications/src/toast/toast.module.ts","~/@syncfusion/ej2-angular-notifications/src/toast/toast-all.module.ts"],"names":["setValue","ComplexBase","Directive","ViewContainerRef","ArrayBase","ContentChildren","outputs","ToastComponent","ComponentBase","Toast","Component","ChangeDetectionStrategy","ContentChild","ElementRef","Renderer2","Injector","Template","ComponentMixins","NgModule","CommonModule"],"mappings":"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","sourcesContent":["import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet /** @type {?} */ input: string[] = ['model'];\nlet /** @type {?} */ outputs: string[] = ['click'];\n/**\n * 'e-button' directive represent a button of angular toast \n * It must be contained in a Toast component(`ejs-toast`). \n * ```html\n * <ejs-toast id='toast' showCloseIcon=true> \n *   <e-buttons>\n *    <e-button content='Ok' isPrimary=true></e-button>\n *    <e-button content='Cancel'></e-button>\n *   </e-buttons>\n * </ejs-toast>\n * ```\n */\nexport class ButtonModelPropDirective extends ComplexBase<ButtonModelPropDirective> {\npublic directivePropList: any;\n/**\n * Specifies the Button component model properties to render the Toast action buttons. \n * \n * \\@default null\n */\npublic model: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-buttonmodelprops>e-buttonmodelprop',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\n}\n\nfunction ButtonModelPropDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nButtonModelPropDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nButtonModelPropDirective.ctorParameters;\n/** @type {?} */\nButtonModelPropDirective.prototype.directivePropList;\n/**\n * Specifies the Button component model properties to render the Toast action buttons. \n * \n * \\@default null\n * @type {?}\n */\nButtonModelPropDirective.prototype.model;\n/** @type {?} */\nButtonModelPropDirective.prototype.viewContainerRef;\n}\n\n/**\n * ButtonModelProp Array Directive\n */\nexport class ButtonModelPropsDirective extends ArrayBase<ButtonModelPropsDirective> {\nconstructor() {\n        super('buttons');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ejs-toast>e-buttonmodelprops',\n    queries: {\n        children: new ContentChildren(ButtonModelPropDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ButtonModelPropsDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nButtonModelPropsDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nButtonModelPropsDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ElementRef, ViewContainerRef, Renderer2, Injector, ChangeDetectionStrategy, QueryList, ValueProvider, ContentChild } from '@angular/core';\nimport { ComponentBase, ComponentMixins, IComponentBase, applyMixins, PropertyCollectionInfo, setValue } from '@syncfusion/ej2-angular-base';\nimport { Toast } from '@syncfusion/ej2-notifications';\nimport { Template } from '@syncfusion/ej2-angular-base';\nimport { ButtonModelPropsDirective } from './buttons.directive';\n\nexport const /** @type {?} */ inputs: string[] = ['animation','buttons','content','cssClass','enableHtmlSanitizer','enablePersistence','enableRtl','extendedTimeout','height','icon','locale','newestOnTop','position','progressDirection','showCloseButton','showProgressBar','target','template','timeOut','title','width'];\nexport const /** @type {?} */ outputs: string[] = ['beforeOpen','beforeSanitizeHtml','click','close','created','destroyed','open'];\nexport const /** @type {?} */ twoWays: string[] = [''];\n/**\n * Represents the Angular Toast Component\n * ```html\n * <ejs-toast></ejs-toast>\n * ```\n */\n@ComponentMixins([ComponentBase])\nexport class ToastComponent extends Toast implements IComponentBase {\npublic containerContext : any;\npublic tagObjects: any;\npublic childButtons: QueryList<ButtonModelPropsDirective>;\npublic tags: string[] = ['buttons'];\n/**\n * Specifies the title to be displayed on the Toast. \n * Works only with string values.\n * \\@default null\n */\n@Template()\n    public title: any;\n/**\n * Specifies the content to be displayed on the Toast. \n * Accepts selectors, string values and HTML elements.\n * \\@default null\n * \\@blazortype string\n */\n@Template()\n    public content: any;\n/**\n * Specifies the HTML element/element ID as a string that can be displayed as a Toast. \n * The given template is taken as preference to render the Toast, even if the built-in properties such as title and content are defined.\n * \n * {% codeBlock src='toast/template/index.md' %}{% endcodeBlock %}\n *     \n * \\@default null\n */\n@Template()\n    public template: any;\n/**\n * @param {?} ngEle\n * @param {?} srenderer\n * @param {?} viewContainerRef\n * @param {?} injector\n */\nconstructor(private ngEle: ElementRef,\nprivate srenderer: Renderer2,\nprivate viewContainerRef:ViewContainerRef,\nprivate injector: Injector) {\n        super();\n        this.element = this.ngEle.nativeElement;\n        this.injectedModules = this.injectedModules || [];\n\n        this.registerEvents(outputs);\n        this.addTwoWay.call(this, twoWays);\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.containerContext  = new ComponentBase();\n    }\n/**\n * @return {?}\n */\npublic ngOnInit() {\n        this.containerContext.ngOnInit(this);\n    }\n/**\n * @return {?}\n */\npublic ngAfterViewInit(): void {\n        this.containerContext.ngAfterViewInit(this);\n    }\n/**\n * @return {?}\n */\npublic ngOnDestroy(): void {\n        this.containerContext.ngOnDestroy(this);\n    }\n/**\n * @return {?}\n */\npublic ngAfterContentChecked(): void {\n        this.tagObjects[0].instance = this.childButtons;\n        this.containerContext.ngAfterContentChecked(this);\n    }\npublic registerEvents: (eventList: string[]) => void;\npublic addTwoWay: (propList: string[]) => void;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ejs-toast',\n    inputs: inputs,\n    outputs: outputs,\n    template: `<ng-content ></ng-content>`,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    queries: {\n        childButtons: new ContentChild(ButtonModelPropsDirective)\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ViewContainerRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'title': [{ type: ContentChild, args: ['title', ] },],\n'content': [{ type: ContentChild, args: ['content', ] },],\n'template': [{ type: ContentChild, args: ['template', ] },],\n};\n}\n\nfunction ToastComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nToastComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nToastComponent.ctorParameters;\n/** @type {?} */\nToastComponent.propDecorators;\n/** @type {?} */\nToastComponent.prototype.containerContext;\n/** @type {?} */\nToastComponent.prototype.tagObjects;\n/** @type {?} */\nToastComponent.prototype.childButtons;\n/** @type {?} */\nToastComponent.prototype.tags;\n/**\n * Specifies the title to be displayed on the Toast. \n * Works only with string values.\n * \\@default null\n * @type {?}\n */\nToastComponent.prototype.title;\n/**\n * Specifies the content to be displayed on the Toast. \n * Accepts selectors, string values and HTML elements.\n * \\@default null\n * \\@blazortype string\n * @type {?}\n */\nToastComponent.prototype.content;\n/**\n * Specifies the HTML element/element ID as a string that can be displayed as a Toast. \n * The given template is taken as preference to render the Toast, even if the built-in properties such as title and content are defined.\n * \n * {% codeBlock src='toast/template/index.md' %}{% endcodeBlock %}\n *     \n * \\@default null\n * @type {?}\n */\nToastComponent.prototype.template;\n/** @type {?} */\nToastComponent.prototype.registerEvents;\n/** @type {?} */\nToastComponent.prototype.addTwoWay;\n/** @type {?} */\nToastComponent.prototype.ngEle;\n/** @type {?} */\nToastComponent.prototype.srenderer;\n/** @type {?} */\nToastComponent.prototype.viewContainerRef;\n/** @type {?} */\nToastComponent.prototype.injector;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ButtonModelPropDirective, ButtonModelPropsDirective } from './buttons.directive';\nimport { ToastComponent } from './toast.component';\n/**\n * NgModule definition for the Toast component.\n */\nexport class ToastModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule],\n    declarations: [\n        ToastComponent,\n        ButtonModelPropDirective,\n        ButtonModelPropsDirective\n    ],\n    exports: [\n        ToastComponent,\n        ButtonModelPropDirective,\n        ButtonModelPropsDirective\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ToastModule_tsickle_Closure_declarations() {\n/** @type {?} */\nToastModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nToastModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule, ValueProvider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ButtonModelPropDirective, ButtonModelPropsDirective } from './buttons.directive';\nimport { ToastComponent } from './toast.component';\nimport { ToastModule } from './toast.module';\n/**\n * NgModule definition for the Toast component with providers.\n */\nexport class ToastAllModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, ToastModule],\n    exports: [\n        ToastModule\n    ],\n    providers:[\n        \n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ToastAllModule_tsickle_Closure_declarations() {\n/** @type {?} */\nToastAllModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nToastAllModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}